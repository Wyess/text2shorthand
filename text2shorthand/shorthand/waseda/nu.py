import math
from ..waseda.char import WasedaChar
from text2shorthand.common.point import Point as P, PPoint as PP
import pyx
from pyx.metapost.path import (
    beginknot,
    knot,
    endknot,
    smoothknot,
    tensioncurve,
    controlcurve,
    curve)

class CharNu(WasedaChar):
    def __init__(self, name='nu', kana='„Å¨',
                 model='EL8CL4', head_type='EL',
                 tail_type='ELCL4'):
        super().__init__(name, kana, model, head_type, tail_type)

    @classmethod
    def path_ELCL(cls, ta=None, **kwargs):
        #M 0,2 C 6.192795,4.012207 22.677124,7.462708 22.677124,2 22.677124,1.0608215 22.073261,0.40467075 21.189451,0.085207 20.305641,-0.23425675 19.141884,-0.2170335 18.022095,0.190536 15.338012,1.1674615 12.930194,2.6189903 10.742098,4.4550193

        #z0 = P(0, 0)
        #c0 = P(2.17652, -0.70721)
        #c1 = P(7.9701, -1.91992)
        #z1 = P(7.9701, 0)
        #c2 = P(7.9701, 0.330084)
        #c3 = P(7.75787, 0.560694)
        #z2 = P(7.44724, 0.672973)
        #c4 = P(7.13662, 0.785252)
        #c5 = P(6.7276, 0.779198)
        #z3 = P(6.33404, 0.635954)
        #c6 = P(5.3907, 0.292604)
        #c7 = P(4.54444, -0.21755)
        z4 = P(3.77542, -0.862841)

        #z0 = P(0, 0)
        #c0 = z0 + P(2.17652, -0.70721)
        #z1 = z0 + P(7.9701, 0)
        #c1 = z1 + P(0, -1.91992)
        #c2 = z1 + P(0, 0.330084)
        #z2 = z1 + P(-0.522857, 0.672973)
        #c3 = z2 + P(0.310624, -0.112279)
        #c4 = z2 + P(-0.310624, 0.112279)
        #z3 = z2 + P(-1.1132, -0.0370189)
        #c5 = z3 + P(0.393561, 0.143244)
        #c6 = z3 + P(-0.943347, -0.34335)
        #z4 = z3 + P(-2.55863, -1.49879)
        #c7 = z4 + P(0.769028, 0.645291)

        z0 = P(0, 0)
        c0 = z0 + PP(2.28853, -18)
        z1 = z0 + PP(7.9701, 0)
        c1 = z1 + PP(1.91992, -90)
        c2 = z1 + PP(0.330084, 90)
        z2 = z1 + PP(0.852216, 127)
        c3 = z2 + PP(0.330293, -19)
        c4 = z2 + PP(0.330293, 160)
        z3 = z2 + PP(1.11381, -178)
        #z3 = z4 - PP(2.96529, ta + -8)
        c5 = z3 + PP(0.418819, 19)
        c6 = z3 + PP(1.00389, -160)
        #z4 = z3 + PP(2.96529, -149)
        c7 = z4 + PP(1.00389, 39)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            controlcurve(c6, c7),
            #curve(),
            endknot(*z4)])

    @classmethod
    def path_ELCLe(cls, ta=None, **kwargs):
        #M 79.3746,387.255 C 85.5213,389.252 101.883,391.0954 101.883,385.6734 101.883,383.8234 99.9156,382.3024 98.2112,382.0024 95.4532,381.4664 90.1878,382.7224 90.3838,385.5254 90.6625,389.5114 95.9933,388.0634 100.382,387.8334

        #z0 = P(0, -0)
        #c0 = P(2.16842, -0.704497)
        #c1 = P(7.94046, -1.35481)
        #z1 = P(7.94046, 0.557953)
        #c2 = P(7.94046, 1.21059)
        #c3 = P(7.24641, 1.74717)
        #z2 = P(6.64513, 1.853)
        #c4 = P(5.67217, 2.04209)
        #c5 = P(3.81466, 1.599)
        #z3 = P(3.8838, 0.610164)
        #c6 = P(3.98212, -0.796008)
        #c7 = P(5.86271, -0.285186)
        z4 = P(7.41094, -0.204047)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16842, -0.704497)
        #z1 = z0 + P(7.94046, 0.557953)
        #c1 = z1 + P(0, -1.91276)
        #c2 = z1 + P(0, 0.652639)
        #z2 = z1 + P(-1.29533, 1.29505)
        #c3 = z2 + P(0.601274, -0.105833)
        #c4 = z2 + P(-0.972961, 0.189089)
        #z3 = z2 + P(-2.76133, -1.24284)
        #c5 = z3 + P(-0.0691444, 0.988836)
        #c6 = z3 + P(0.0983192, -1.40617)
        #z4 = z3 + P(3.52714, -0.814211)
        #c7 = z4 + P(-1.54824, -0.0811389)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27999, -17)
        z1 = z0 + PP(7.96004, 4)
        c1 = z1 + PP(1.91276, -90)
        c2 = z1 + PP(0.652639, 90)
        z2 = z1 + PP(1.83167, 135)
        c3 = z2 + PP(0.610518, -9)
        c4 = z2 + PP(0.991165, 169)
        #z3 = z2 + PP(3.02813, -155)
        z3 = z4 - PP(3.6199, ta + 345)
        c5 = z3 + PP(0.991251, 93)
        #c6 = z3 + PP(1.40961, -86)
        #z4 = z3 + PP(3.6199, -12)
        #c7 = z4 + PP(1.55036, -177)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLer(cls, ta=None, **kwargs):
        #M 47.3414,441.139 C 53.4875,443.136 69.849,446.561 69.849,441.139 69.849,437.5473 66.97861,437.38121 64.919005,437.41313 62.4673,437.45113 58.279646,439.75161 59.190727,442.02806 60.515398,445.33791 66.651,442.497 69.849,441.139

        #z0 = P(0, -0)
        #c0 = P(2.16821, -0.704497)
        #c1 = P(7.94018, -1.91276)
        #z1 = P(7.94018, -0)
        #c2 = P(7.94018, 1.26707)
        #c3 = P(6.92757, 1.32566)
        #z2 = P(6.20099, 1.3144)
        #c4 = P(5.33608, 1.301)
        #c5 = P(3.85877, 0.48944)
        #z3 = P(4.18018, -0.313641)
        #c6 = P(4.64749, -1.48128)
        #c7 = P(6.812, -0.479072)
        z4 = P(7.94018, -0)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16821, -0.704497)
        #z1 = z0 + P(7.94018, 0)
        #c1 = z1 + P(0, -1.91276)
        #c2 = z1 + P(0, 1.26707)
        #z2 = z1 + P(-1.73919, 1.3144)
        #c3 = z2 + P(0.726583, 0.0112607)
        #c4 = z2 + P(-0.864907, -0.0134056)
        #z3 = z2 + P(-2.02081, -1.62804)
        #c5 = z3 + P(-0.321409, 0.803081)
        #c6 = z3 + P(0.467314, -1.16764)
        #z4 = z3 + P(3.76, 0.313641)
        #c7 = z4 + P(-1.12818, -0.479072)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27979, -18)
        z1 = z0 + PP(7.94018, 0)
        c1 = z1 + PP(1.91276, -90)
        c2 = z1 + PP(1.26707, 90)
        z2 = z1 + PP(2.18001, 142)
        c3 = z2 + PP(0.72667, 0)
        c4 = z2 + PP(0.865011, -179)
        #z3 = z2 + PP(2.59503, -141)
        z3 = z4 - PP(3.77306, ta + 340)
        c5 = z3 + PP(0.86501, 111)
        #c6 = z3 + PP(1.25768, -68)
        #z4 = z3 + PP(3.77306, 4)
        #c7 = z4 + PP(1.22569, -156)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLel(cls, ta=None, **kwargs):
        #M 109.07,117.816 C 115.24,119.821 131.662,123.258 131.662,117.816 131.662,116.59792 131.09341,115.52888 130.13087,114.86749 127.77421,113.24816 119.6946,113.37191 119.05601,115.97367 118.79811,117.02441 120.64596,119.22377 124.40107,120.72104

        #z0 = P(0, -0)
        #c0 = P(2.16851, -0.704677)
        #c1 = P(7.94018, -1.91264)
        #z1 = P(7.94018, -0)
        #c2 = P(7.94018, 0.428106)
        #c3 = P(7.74034, 0.803831)
        #z2 = P(7.40205, 1.03628)
        #c4 = P(6.57378, 1.60541)
        #c5 = P(3.73412, 1.56192)
        #z3 = P(3.50968, 0.647505)
        #c6 = P(3.41904, 0.278212)
        #c7 = P(4.06849, -0.494775)
        z4 = P(5.38826, -1.021)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16851, -0.704677)
        #z1 = z0 + P(7.94018, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 0.428106)
        #z2 = z1 + P(-0.538131, 1.03628)
        #c3 = z2 + P(0.338294, -0.232452)
        #c4 = z2 + P(-0.828271, 0.56913)
        #z3 = z2 + P(-3.89237, -0.388778)
        #c5 = z3 + P(0.224439, 0.914414)
        #c6 = z3 + P(-0.0906415, -0.369293)
        #z4 = z3 + P(1.87857, -1.66851)
        #c7 = z4 + P(-1.31977, 0.52623)

        z0 = P(0, -0)
        c0 = z0 + PP(2.28013, -18)
        z1 = z0 + PP(7.94018, 0)
        c1 = z1 + PP(1.91264, -90)
        c2 = z1 + PP(0.428106, 90)
        z2 = z1 + PP(1.16768, 117)
        c3 = z2 + PP(0.410459, -34)
        c4 = z2 + PP(1.00496, 145)
        #z3 = z2 + PP(3.91174, -174)
        z3 = z4 - PP(2.51256, ta + -19)
        c5 = z3 + PP(0.941555, 76)
        #c6 = z3 + PP(0.380254, -103)
        #z4 = z3 + PP(2.51256, -41)
        #c7 = z4 + PP(1.42081, 158)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLne(cls, ta=None, **kwargs):
        #M 47.3414,176.955 C 53.5111,178.959 69.9338,182.397 69.9338,176.955 69.9338,171.43531 60.255705,177.62646 58.0434,179.401

        #z0 = P(0, -0)
        #c0 = P(2.1684, -0.704326)
        #c1 = P(7.94032, -1.91264)
        #z1 = P(7.94032, -0)
        #c2 = P(7.94032, 1.93995)
        #c3 = P(4.53886, -0.235991)
        z2 = P(3.76132, -0.859671)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.1684, -0.704326)
        #z1 = z0 + P(7.94032, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 1.93995)
        #z2 = z1 + P(-4.179, -0.859671)
        #c3 = z2 + P(0.777536, 0.62368)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27992, -17)
        z1 = z0 + PP(7.94032, 0)
        #z1 = z2 - PP(4.2665, ta + -26)
        c1 = z1 + PP(1.91264, -90)
        #c2 = z1 + PP(1.93995, 90)
        #z2 = z1 + PP(4.2665, -168)
        #c3 = z2 + PP(0.996764, 38)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            #controlcurve(c2, c3),
            curve(),
            endknot(*z2, angle=ta+180)])

    @classmethod
    def path_ELCLner(cls, ta=None, **kwargs):
        #M143.289 176.955C149.459 178.959 165.882 182.397 165.882 176.955C165.882 176.019 165.313 175.33 164.428 175.025C163.548 174.705 162.395 174.749 161.273 175.136C158.599 176.109 156.203 177.61 153.991 179.401

        #z0 = P(0, -0)
        #c0 = P(2.16851, -0.704326)
        #c1 = P(7.94053, -1.91264)
        #z1 = P(7.94053, -0)
        #c2 = P(7.94053, 0.328966)
        #c3 = P(7.74055, 0.571122)
        #z2 = P(7.42951, 0.678318)
        #c4 = P(7.12023, 0.790785)
        #c5 = P(6.71499, 0.77532)
        #z3 = P(6.32065, 0.639306)
        #c6 = P(5.38085, 0.297335)
        #c7 = P(4.53875, -0.230206)
        z4 = P(3.76132, -0.859671)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16851, -0.704326)
        #z1 = z0 + P(7.94053, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 0.328966)
        #z2 = z1 + P(-0.511023, 0.678318)
        #c3 = z2 + P(0.311042, -0.107195)
        #c4 = z2 + P(-0.309285, 0.112467)
        #z3 = z2 + P(-1.10886, -0.039012)
        #c5 = z3 + P(0.394338, 0.136015)
        #c6 = z3 + P(-0.939804, -0.34197)
        #z4 = z3 + P(-2.55933, -1.49898)
        #c7 = z4 + P(0.777429, 0.629465)

        z0 = P(0, -0)
        c0 = z0 + PP(2.28002, -17)
        z1 = z0 + PP(7.94053, 0)
        c1 = z1 + PP(1.91264, -90)
        c2 = z1 + PP(0.328966, 90)
        z2 = z1 + PP(0.84927, 126)
        c3 = z2 + PP(0.328995, -19)
        c4 = z2 + PP(0.329099, 160)
        z3 = z2 + PP(1.10954, -177)
        #z3 = z4 - PP(2.96599, ta + -7)
        c5 = z3 + PP(0.417136, 19)
        c6 = z3 + PP(1.00009, -160)
        #z4 = z3 + PP(2.96599, -149)
        c7 = z4 + PP(1.00031, 38)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            controlcurve(c6, c7),
            #curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLnel(cls, ta=None, **kwargs):
        #M 95.6807,176.955 C 101.85,178.959 118.273,182.397 118.273,176.955 118.273,176.019 116.39849,173.56235 113.18529,173.61526 109.66462,173.67323 105.07074,177.61013 107.03821,178.44889 109.06761,179.31406 112.58937,179.65265 117.3566,178.76514

        #z0 = P(0, -0)
        #c0 = P(2.16826, -0.704326)
        #c1 = P(7.94029, -1.91264)
        #z1 = P(7.94029, -0)
        #c2 = P(7.94029, 0.328966)
        #c3 = P(7.28147, 1.19238)
        #z2 = P(6.15216, 1.17378)
        #c4 = P(4.91479, 1.15341)
        #c5 = P(3.30022, -0.230252)
        #z3 = P(3.99171, -0.525042)
        #c6 = P(4.70496, -0.829115)
        #c7 = P(5.94272, -0.948116)
        z4 = P(7.61821, -0.636192)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16826, -0.704326)
        #z1 = z0 + P(7.94029, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 0.328966)
        #z2 = z1 + P(-1.78813, 1.17378)
        #c3 = z2 + P(1.12931, 0.0185957)
        #c4 = z2 + P(-1.23737, -0.0203741)
        #z3 = z2 + P(-2.16045, -1.69883)
        #c5 = z3 + P(-0.691487, 0.29479)
        #c6 = z3 + P(0.713253, -0.304073)
        #z4 = z3 + P(3.6265, -0.111149)
        #c7 = z4 + P(-1.67549, -0.311924)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27979, -17)
        z1 = z0 + PP(7.94029, 0)
        c1 = z1 + PP(1.91264, -90)
        c2 = z1 + PP(0.328966, 90)
        z2 = z1 + PP(2.13896, 146)
        c3 = z2 + PP(1.12946, 0)
        c4 = z2 + PP(1.23754, -179)
        #z3 = z2 + PP(2.74838, -141)
        z3 = z4 - PP(3.6282, ta + 348)
        c5 = z3 + PP(0.751702, 156)
        #c6 = z3 + PP(0.775364, -23)
        #z4 = z3 + PP(3.6282, -1)
        #c7 = z4 + PP(1.70428, -169)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLs(cls, ta=None, **kwargs):
        #M 47.3414,221.517 C 53.5111,223.521 69.9338,226.959 69.9338,221.517 69.9338,219.47897 67.46443,218.34796 65.01941,217.51431 61.460799,216.30097 60.10502,217.54163 60.10502,219.90972 60.10502,221.35375 60.1482,222.36596 60.1482,224.23097

        #z0 = P(0, -0)
        #c0 = P(2.1684, -0.704326)
        #c1 = P(7.94032, -1.91264)
        #z1 = P(7.94032, -0)
        #c2 = P(7.94032, 0.716286)
        #c3 = P(7.07244, 1.11379)
        #z2 = P(6.21311, 1.40678)
        #c4 = P(4.9624, 1.83323)
        #c5 = P(4.4859, 1.39718)
        #z3 = P(4.4859, 0.564894)
        #c6 = P(4.4859, 0.0573758)
        #c7 = P(4.50108, -0.298375)
        z4 = P(4.50108, -0.953852)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.1684, -0.704326)
        #z1 = z0 + P(7.94032, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 0.716286)
        #z2 = z1 + P(-1.72721, 1.40678)
        #c3 = z2 + P(0.859326, -0.292995)
        #c4 = z2 + P(-1.25071, 0.42644)
        #z3 = z2 + P(-1.72721, -0.841891)
        #c5 = z3 + P(0, 0.832289)
        #c6 = z3 + P(0, -0.507519)
        #z4 = z3 + P(0.015176, -1.51875)
        #c7 = z4 + P(0, 0.655476)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27992, -17)
        z1 = z0 + PP(7.94032, 0)
        c1 = z1 + PP(1.91264, -90)
        c2 = z1 + PP(0.716286, 90)
        z2 = z1 + PP(2.22762, 140)
        c3 = z2 + PP(0.907903, -18)
        c4 = z2 + PP(1.32141, 161)
        #z3 = z2 + PP(1.92147, -154)
        z3 = z4 - PP(1.51882, ta + 1)
        c5 = z3 + PP(0.832289, 90)
        #c6 = z3 + PP(0.507519, -90)
        #z4 = z3 + PP(1.51882, -89)
        #c7 = z4 + PP(0.655476, 90)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLsl(cls, ta=None, **kwargs):
        #M 105.163,180.845 C 111.344,182.735 127.671,186.267 127.671,180.845 127.671,178.75 125.72554,176.76278 123.82946,176.63149 120.36883,176.39185 117.185,180.926 115.825,183.282

        #z0 = P(0, -0)
        #c0 = P(2.18052, -0.66675)
        #c1 = P(7.94032, -1.91276)
        #z1 = P(7.94032, -0)
        #c2 = P(7.94032, 0.739069)
        #c3 = P(7.25401, 1.44012)
        #z2 = P(6.58511, 1.48643)
        #c4 = P(5.36428, 1.57097)
        #c5 = P(4.24109, -0.028575)
        z3 = P(3.76132, -0.859719)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.18052, -0.66675)
        #z1 = z0 + P(7.94032, 0)
        #c1 = z1 + P(0, -1.91276)
        #c2 = z1 + P(0, 0.739069)
        #z2 = z1 + P(-1.35521, 1.48643)
        #c3 = z2 + P(0.668895, -0.0463162)
        #c4 = z2 + P(-1.22083, 0.0845397)
        #z3 = z2 + P(-2.8238, -2.34615)
        #c5 = z3 + P(0.479778, 0.831144)

        z0 = P(0, -0)
        c0 = z0 + PP(2.28018, -17)
        z1 = z0 + PP(7.94032, 0)
        c1 = z1 + PP(1.91276, -90)
        c2 = z1 + PP(0.739069, 90)
        #z2 = z1 + PP(2.01149, 132)
        z2 = z3 - PP(3.67127, ta + -20)
        c3 = z2 + PP(0.670497, -3)
        #c4 = z2 + PP(1.22376, 176)
        #z3 = z2 + PP(3.67127, -140)
        #c5 = z3 + PP(0.959681, 60)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            #controlcurve(c4, c5),
            curve(),
            endknot(*z3, angle=ta)])

    @classmethod
    def path_ELCLsr(cls, ta=None, **kwargs):
        #M 159.368,111.54 C 165.549,113.429 181.877,116.961 181.877,111.54 181.877,106.515 171.28663,104.99701 168.78,108.695 167.51855,110.55599 171.135,112.187 172.551,114.287

        #z0 = P(0, -0)
        #c0 = P(2.18052, -0.666397)
        #c1 = P(7.94068, -1.91241)
        #z1 = P(7.94068, -0)
        #c2 = P(7.94068, 1.77271)
        #c3 = P(4.20463, 2.30822)
        #z2 = P(3.32034, 1.00365)
        #c4 = P(2.87533, 0.347137)
        #c5 = P(4.15114, -0.228247)
        z3 = P(4.65067, -0.969081)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.18052, -0.666397)
        #z1 = z0 + P(7.94068, 0)
        #c1 = z1 + P(0, -1.91241)
        #c2 = z1 + P(0, 1.77271)
        #z2 = z1 + P(-4.62033, 1.00365)
        #c3 = z2 + P(0.884283, 1.30457)
        #c4 = z2 + P(-0.445012, -0.656516)
        #z3 = z2 + P(1.33032, -1.97273)
        #c5 = z3 + P(-0.499533, 0.740833)

        z0 = P(0, -0)
        c0 = z0 + PP(2.28008, -16)
        z1 = z0 + PP(7.94068, 0)
        c1 = z1 + PP(1.91241, -90)
        c2 = z1 + PP(1.77271, 90)
        #z2 = z1 + PP(4.72808, 167)
        z2 = z3 - PP(2.37938, ta + 1)
        c3 = z2 + PP(1.57603, 55)
        #c4 = z2 + PP(0.793126, -124)
        #z3 = z2 + PP(2.37938, -56)
        #c5 = z3 + PP(0.893514, 123)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            #controlcurve(c4, c5),
            curve(),
            endknot(*z3, angle=ta)])

    @classmethod
    def path_ELCLse(cls, ta=None, **kwargs):
        #M 47.3414,303.333 C 53.5111,305.337 69.9338,308.775 69.9338,303.333 69.9338,299.72395 61.369707,296.99518 58.640316,298.98097 57.464507,300.0075 59.821579,304.13131 61.080443,306.13643

        #z0 = P(0, -0)
        #c0 = P(2.1684, -0.704326)
        #c1 = P(7.94032, -1.91264)
        #z1 = P(7.94032, -0)
        #c2 = P(7.94032, 1.26844)
        #c3 = P(4.93039, 2.22749)
        #z2 = P(3.97112, 1.52956)
        #c4 = P(3.55787, 1.16878)
        #c5 = P(4.38628, -0.280574)
        z3 = P(4.82872, -0.985293)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.1684, -0.704326)
        #z1 = z0 + P(7.94032, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 1.26844)
        #z2 = z1 + P(-3.96921, 1.52956)
        #c3 = z2 + P(0.959271, 0.697926)
        #c4 = z2 + P(-0.41325, -0.360784)
        #z3 = z2 + P(0.857607, -2.51486)
        #c5 = z3 + P(-0.44244, 0.704719)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27992, -17)
        z1 = z0 + PP(7.94032, 0)
        c1 = z1 + PP(1.91264, -90)
        c2 = z1 + PP(1.26844, 90)
        #z2 = z1 + PP(4.25372, 158)
        z2 = z3 - PP(2.65707, ta + -13)
        c3 = z2 + PP(1.1863, 36)
        #c4 = z2 + PP(0.54858, -138)
        #z3 = z2 + PP(2.65707, -71)
        #c5 = z3 + PP(0.832095, 122)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            #controlcurve(c4, c5),
            curve(),
            endknot(*z3, angle=ta)])

    @classmethod
    def path_ELCLser(cls, ta=None, **kwargs):
        #M 92.062,303.333 C 98.2316,305.337 114.654,308.775 114.654,303.333 114.654,301.06012 111.55945,299.99831 109.47181,299.71431 106.56746,299.3192 100.75477,300.32827 101.17939,302.63979 101.60883,304.97748 106.11681,305.36698 108.04394,306.25684

        #z0 = P(0, -0)
        #c0 = P(2.16837, -0.704326)
        #c1 = P(7.94018, -1.91264)
        #z1 = P(7.94018, -0)
        #c2 = P(7.94018, 0.798826)
        #c3 = P(6.85257, 1.17201)
        #z2 = P(6.11885, 1.27182)
        #c4 = P(5.09809, 1.41069)
        #c5 = P(3.05516, 1.05604)
        #z3 = P(3.2044, 0.243636)
        #c6 = P(3.35533, -0.577969)
        #c7 = P(4.9397, -0.714862)
        z4 = P(5.61701, -1.02761)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16837, -0.704326)
        #z1 = z0 + P(7.94018, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 0.798826)
        #z2 = z1 + P(-1.82133, 1.27182)
        #c3 = z2 + P(0.733722, -0.0998146)
        #c4 = z2 + P(-1.02076, 0.138865)
        #z3 = z2 + P(-2.91445, -1.02819)
        #c5 = z3 + P(-0.149237, 0.812407)
        #c6 = z3 + P(0.150931, -0.821604)
        #z4 = z3 + P(2.41261, -1.27125)
        #c7 = z4 + P(-0.677309, 0.31275)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27989, -17)
        z1 = z0 + PP(7.94018, 0)
        c1 = z1 + PP(1.91264, -90)
        c2 = z1 + PP(0.798826, 90)
        z2 = z1 + PP(2.22144, 145)
        c3 = z2 + PP(0.74048, -7)
        c4 = z2 + PP(1.03016, 172)
        #z3 = z2 + PP(3.0905, -160)
        z3 = z4 - PP(2.72705, ta + -2)
        c5 = z3 + PP(0.826, 100)
        #c6 = z3 + PP(0.835352, -79)
        #z4 = z3 + PP(2.72705, -27)
        #c7 = z4 + PP(0.746029, 155)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLsel(cls, ta=None, **kwargs):
        #M 144.175,180.845 C 150.354,182.734 166.588,186.266 166.682,180.845 166.793,177.668 164.18842,175.93555 162.70011,176.20389 159.65565,176.75281 157.961,180.38323 157.921,183.646

        #z0 = P(0, -0)
        #c0 = P(2.17981, -0.666397)
        #c1 = P(7.90681, -1.91241)
        #z1 = P(7.93997, -0)
        #c2 = P(7.97913, 1.12077)
        #c3 = P(7.06029, 1.73194)
        #z2 = P(6.53525, 1.63728)
        #c4 = P(5.46123, 1.44363)
        #c5 = P(4.86339, 0.162902)
        z3 = P(4.84928, -0.988131)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.17981, -0.666397)
        #z1 = z0 + P(7.93997, 0)
        #c1 = z1 + P(-0.0331611, -1.91241)
        #c2 = z1 + P(0.0391583, 1.12077)
        #z2 = z1 + P(-1.40472, 1.63728)
        #c3 = z2 + P(0.525043, 0.0946644)
        #c4 = z2 + P(-1.07402, -0.193647)
        #z3 = z2 + P(-1.68596, -2.62541)
        #c5 = z3 + P(0.0141111, 1.15103)

        z0 = P(0, -0)
        c0 = z0 + PP(2.2794, -16)
        z1 = z0 + PP(7.93997, 0)
        c1 = z1 + PP(1.9127, -90)
        c2 = z1 + PP(1.12146, 87)
        #z2 = z1 + PP(2.1573, 130)
        z2 = z3 - PP(3.12014, ta + -31)
        c3 = z2 + PP(0.533508, 10)
        #c4 = z2 + PP(1.09134, -169)
        #z3 = z2 + PP(3.12014, -122)
        #c5 = z3 + PP(1.15112, 89)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            #controlcurve(c4, c5),
            curve(),
            endknot(*z3, angle=ta)])

    @classmethod
    def path_ELCLsw(cls, ta=None, **kwargs):
        #M 47.3414,379.422 C 53.5111,381.427 69.9338,384.864 69.9338,379.422 69.9338,375.15045 64.713664,373.95666 62.142293,377.01677 61.285959,378.20356 60.473977,379.92626 59.378734,382.04821

        #z0 = P(0, -0)
        #c0 = P(2.1684, -0.704677)
        #c1 = P(7.94032, -1.91264)
        #z1 = P(7.94032, -0)
        #c2 = P(7.94032, 1.50128)
        #c3 = P(6.10565, 1.92085)
        #z2 = P(5.20192, 0.845342)
        #c4 = P(4.90095, 0.428233)
        #c5 = P(4.61557, -0.177227)
        z3 = P(4.23064, -0.923007)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.1684, -0.704677)
        #z1 = z0 + P(7.94032, 0)
        #c1 = z1 + P(0, -1.91264)
        #c2 = z1 + P(0, 1.50128)
        #z2 = z1 + P(-2.7384, 0.845342)
        #c3 = z2 + P(0.903734, 1.07551)
        #c4 = z2 + P(-0.300967, -0.417109)
        #z3 = z2 + P(-0.97128, -1.76835)
        #c5 = z3 + P(0.384934, 0.74578)

        z0 = P(0, -0)
        c0 = z0 + PP(2.28003, -18)
        z1 = z0 + PP(7.94032, 0)
        c1 = z1 + PP(1.91264, -90)
        c2 = z1 + PP(1.50128, 90)
        #z2 = z1 + PP(2.86591, 162)
        z2 = z3 - PP(2.01753, ta + 0)
        c3 = z2 + PP(1.40479, 49)
        #c4 = z2 + PP(0.514355, -125)
        #z3 = z2 + PP(2.01753, -118)
        #c5 = z3 + PP(0.839263, 62)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            #controlcurve(c4, c5),
            curve(),
            endknot(*z3, angle=ta)])

    @classmethod
    def path_ELCLswr(cls, ta=None, **kwargs):
        #M 322.169,111.54 C 328.316,113.537 344.676,116.961 344.676,111.54 344.676,109.69 341.92244,108.31506 339.991,108.009 338.13696,107.71521 335.48516,108.15299 334.66617,109.84209 333.96953,111.27886 335.89362,112.36107 336.247,114.364

        #z0 = P(0, -0)
        #c0 = P(2.16852, -0.704497)
        #c1 = P(7.93997, -1.91241)
        #z1 = P(7.93997, -0)
        #c2 = P(7.93997, 0.652639)
        #c3 = P(6.96857, 1.13769)
        #z2 = P(6.28721, 1.24566)
        #c4 = P(5.63314, 1.3493)
        #c5 = P(4.69765, 1.19486)
        #z3 = P(4.40872, 0.598985)
        #c6 = P(4.16296, 0.0921244)
        #c7 = P(4.84174, -0.289655)
        z4 = P(4.96641, -0.996244)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16852, -0.704497)
        #z1 = z0 + P(7.93997, 0)
        #c1 = z1 + P(0, -1.91241)
        #c2 = z1 + P(0, 0.652639)
        #z2 = z1 + P(-1.65276, 1.24566)
        #c3 = z2 + P(0.681369, -0.107971)
        #c4 = z2 + P(-0.654064, 0.103643)
        #z3 = z2 + P(-1.87848, -0.646673)
        #c5 = z3 + P(0.288921, 0.595877)
        #c6 = z3 + P(-0.245759, -0.506861)
        #z4 = z3 + P(0.557682, -1.59523)
        #c7 = z4 + P(-0.124665, 0.706589)

        z0 = P(0, -0)
        c0 = z0 + PP(2.28009, -17)
        z1 = z0 + PP(7.93997, 0)
        c1 = z1 + PP(1.91241, -90)
        c2 = z1 + PP(0.652639, 90)
        z2 = z1 + PP(2.06961, 142)
        c3 = z2 + PP(0.689871, -9)
        c4 = z2 + PP(0.662225, 170)
        #z3 = z2 + PP(1.98668, -161)
        z3 = z4 - PP(1.6899, ta + 10)
        c5 = z3 + PP(0.662227, 64)
        #c6 = z3 + PP(0.563298, -115)
        #z4 = z3 + PP(1.6899, -70)
        #c7 = z4 + PP(0.717502, 100)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ELCLswl(cls, ta=None, **kwargs):
        #M 47.3414,375.334 C 53.4875,377.331 70.874128,380.65719 69.849,375.334 68.700108,369.36814 59.834825,375.60022 58.0034,377.77

        #z0 = P(0, -0)
        #c0 = P(2.16011, -0.701865)
        #c1 = P(8.27081, -1.87089)
        #z1 = P(7.91052, -0)
        #c2 = P(7.50673, 2.09676)
        #c3 = P(4.39094, -0.0935656)
        z2 = P(3.74727, -0.856156)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16011, -0.701865)
        #z1 = z0 + P(7.91052, 0)
        #c1 = z1 + P(0.360291, -1.87089)
        #c2 = z1 + P(-0.403789, 2.09676)
        #z2 = z1 + P(-4.16325, -0.856156)
        #c3 = z2 + P(0.643672, 0.762591)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27127, -18)
        z1 = z0 + PP(7.91052, 0)
        #z1 = z2 - PP(4.25037, ta + -37)
        c1 = z1 + PP(1.90526, -79)
        #c2 = z1 + PP(2.13529, 100)
        #z2 = z1 + PP(4.25037, -168)
        #c3 = z2 + PP(0.997927, 49)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            #controlcurve(c2, c3),
            curve(),
            endknot(*z2, angle=ta)])

    @classmethod
    def path_ELCLE(cls, ta=None, **kwargs):
        #M 206.031,117.816 C 212.211,119.706 228.54,121.664 228.54,116.242 228.54,114.392 227.51076,112.98246 226.10321,112.48865 223.10143,111.43555 217.36868,112.32736 217.04465,115.49196 216.69798,118.87773 222.70482,118.47833 227.038,118.394 228.44842,118.36655 229.85883,118.3391 231.26925,118.31165

        #z0 = P(0, -0)
        #c0 = P(2.18017, -0.66675)
        #c1 = P(7.94067, -1.35749)
        #z1 = P(7.94067, 0.555272)
        #c2 = P(7.94067, 1.20791)
        #c3 = P(7.57758, 1.70517)
        #z2 = P(7.08103, 1.87937)
        #c4 = P(6.02207, 2.25088)
        #c5 = P(3.99968, 1.93627)
        #z3 = P(3.88537, 0.81987)
        #c6 = P(3.76307, -0.374555)
        #c7 = P(5.88215, -0.233655)
        #z4 = P(7.4108, -0.203906)
        #c8 = P(7.90837, -0.194222)
        #c9 = P(8.40593, -0.184538)
        z5 = P(8.90349, -0.174854)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.18017, -0.66675)
        #z1 = z0 + P(7.94067, 0.555272)
        #c1 = z1 + P(0, -1.91276)
        #c2 = z1 + P(0, 0.652639)
        #z2 = z1 + P(-0.859645, 1.3241)
        #c3 = z2 + P(0.496552, -0.174205)
        #c4 = z2 + P(-1.05896, 0.37151)
        #z3 = z2 + P(-3.19566, -1.0595)
        #c5 = z3 + P(0.114311, 1.1164)
        #c6 = z3 + P(-0.122297, -1.19442)
        #z4 = z3 + P(3.52543, -1.02378)
        #c7 = z4 + P(-1.52865, -0.0297497)
        #c8 = z4 + P(0.497565, 0.00968375)
        #z5 = z4 + P(1.49269, 0.0290513)
        #c9 = z5 + P(-0.497565, -0.00968375)

        z0 = P(0, -0)
        c0 = z0 + PP(2.27984, -17)
        z1 = z0 + PP(7.96007, 4)
        c1 = z1 + PP(1.91276, -90)
        c2 = z1 + PP(0.652639, 90)
        z2 = z1 + PP(1.57868, 122)
        c3 = z2 + PP(0.526224, -19)
        c4 = z2 + PP(1.12224, 160)
        z3 = z2 + PP(3.36672, -161)
        c5 = z3 + PP(1.12224, 84)
        c6 = z3 + PP(1.20067, -95)
        z4 = z3 + PP(3.67107, -16)
        #z4 = z5 - PP(1.49297, ta + 359)
        c7 = z4 + PP(1.52894, -178)
        c8 = z4 + PP(0.497659, 1)
        z5 = z4 + PP(1.49297, 1)
        c9 = z5 + PP(0.497659, -178)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            controlcurve(c6, c7),
            knot(*z4),
            controlcurve(c8, c9),
            #curve(),
            endknot(*z5)])

class CharNun(CharNu):
    def __init__(self, name='nun', kana='„Å¨„Çì',
                 model='EL8CL4E1F', head_type='EL',
                 tail_type='EF'):
        super().__init__(name, kana, model, head_type, tail_type)

    def get_paths(self):
        return [self.path_ELCLE()]

class CharNuku(CharNu):
    def __init__(self, name='nuku', kana='„Å¨„Åè',
                 model='BEL8CL4', head_type='BEL',
                 tail_type='ELCL4'):
        super().__init__(name, kana, model, head_type, tail_type)

class CharNutsu(CharNu):
    def __init__(self, name='nutsu', kana='„Å¨„Å§',
                 model='EL8CL4SW1F', head_type='EL',
                 tail_type='SW1F'):
        super().__init__(name, kana, model, head_type, tail_type)
        self.tail_ligature = {}

    @classmethod
    def path_ELCLSWF(cls, ta=None, **kwargs):
        #M 319.173,117.816 C 325.32,119.813 341.681,123.238 341.681,117.816 341.681,111.91387 338.12673,109.72252 334.64516,114.89309 333.55759,116.50827 332.25627,118.54422 331.165,120.432 330.55052,121.49499 329.71817,122.94431 329.44026,123.6867

        #z0 = P(0, -0)
        #c0 = P(2.16852, -0.704497)
        #c1 = P(7.94032, -1.91276)
        #z1 = P(7.94032, -0)
        #c2 = P(7.94032, 2.08214)
        #c3 = P(6.68645, 2.8552)
        #z2 = P(5.45823, 1.03114)
        #c4 = P(5.07456, 0.461338)
        #c5 = P(4.61549, -0.2569)
        #z3 = P(4.23051, -0.922867)
        #c6 = P(4.01374, -1.29787)
        #c7 = P(3.7201, -1.80915)
        z4 = P(3.62206, -2.07105)

        #z0 = P(0, -0)
        #c0 = z0 + P(2.16852, -0.704497)
        #z1 = z0 + P(7.94032, 0)
        #c1 = z1 + P(0, -1.91276)
        #c2 = z1 + P(0, 2.08214)
        #z2 = z1 + P(-2.48209, 1.03114)
        #c3 = z2 + P(1.22822, 1.82406)
        #c4 = z2 + P(-0.383671, -0.5698)
        #z3 = z2 + P(-1.22772, -1.954)
        #c5 = z3 + P(0.384976, 0.665967)
        #c6 = z3 + P(-0.216775, -0.374999)
        #z4 = z3 + P(-0.60845, -1.14819)
        #c7 = z4 + P(0.0980405, 0.261899)

        z0 = P(0, -0)
        c0 = z0 + PP(2.28009, -17)
        z1 = z0 + PP(7.94032, 0)
        c1 = z1 + PP(1.91276, -90)
        c2 = z1 + PP(2.08214, 90)
        z2 = z1 + PP(2.68775, 157)
        c3 = z2 + PP(2.19903, 56)
        c4 = z2 + PP(0.686931, -123)
        z3 = z2 + PP(2.30769, -122)
        #z3 = z4 - PP(1.29944, ta + -6)
        c5 = z3 + PP(0.769232, 59)
        c6 = z3 + PP(0.433146, -120)
        z4 = z3 + PP(1.29944, -117)
        c7 = z4 + PP(0.279648, 69)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            controlcurve(c6, c7),
            #curve(),
            endknot(*z4)])

