from ..waseda.char import WasedaChar
import math
from text2shorthand.common.point import Point as P, PPoint as PP
import pyx
from pyx.metapost.path import (
    beginknot,
    knot,
    endknot,
    smoothknot,
    tensioncurve,
    controlcurve,
    curve)


class CharIi(WasedaChar):
    def __init__(self, name='ii', kana='いい',
                 model='ER4CR1', head_type='ER',
                 tail_type='ERCR1'):
        super().__init__(name, kana, model, head_type, tail_type)

    @classmethod
    def path_ERCR(cls, ta=None, **kwargs):
        #M 0,0 C 4.49242,-2.5937 11.3811,-3.51806 11.3811,0 11.3811,1.69707 9.5997505,2.5840613 8.61885,2.00689 8.0620691,1.6792748 8.575518,0.66634691 8.8532223,0.0830656 9.1724649,-0.58746157 9.6346408,-1.25347 10.0328,-1.94316

        #z0 = P(0, 0)
        #c0 = P(1.58483, 0.915)
        #c1 = P(4.015, 1.24109)
        #z1 = P(4.015, 0)
        #c2 = P(4.015, -0.598689)
        #c3 = P(3.38658, -0.911599)
        #z2 = P(3.04054, -0.707986)
        #c4 = P(2.84412, -0.592411)
        #c5 = P(3.02525, -0.235072)
        #z3 = P(3.12322, -0.0293037)
        #c6 = P(3.23584, 0.207243)
        #c7 = P(3.39889, 0.442196)
        #z4 = P(3.53935, 0.685504)

        #z0 = P(0, 0)
        #c0 = z0 + P(1.58483, 0.915)
        #z1 = z0 + P(4.015, 0)
        #c1 = z1 + P(0, 1.24109)
        #c2 = z1 + P(0, -0.598689)
        #z2 = z1 + P(-0.97446, -0.707986)
        #c3 = z2 + P(0.34604, -0.203613)
        #c4 = z2 + P(-0.19642, 0.115575)
        #z3 = z2 + P(0.0826813, 0.678682)
        #c5 = z3 + P(-0.0979679, -0.205769)
        #c6 = z3 + P(0.112622, 0.236547)
        #z4 = z3 + P(0.416129, 0.714807)
        #c7 = z4 + P(-0.140462, -0.243307)

        z0 = P(0, 0)
        c0 = z0 + PP(1.83, 30)
        z1 = z0 + PP(4.015, 0)
        c1 = z1 + PP(1.24109, 90)
        c2 = z1 + PP(0.598689, -90)
        z2 = z1 + PP(1.2045, -144)
        c3 = z2 + PP(0.4015, -30)
        c4 = z2 + PP(0.2279, 149)
        z3 = z2 + PP(0.6837, 83)
        #z3 = z4 - PP(0.827111, ta + 358)
        c5 = z3 + PP(0.2279, -115)
        c6 = z3 + PP(0.261989, 64)
        z4 = z3 + PP(0.827111, 59)
        c7 = z4 + PP(0.280941, -119)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            controlcurve(c6, c7),
            #curve(),
            endknot(*z4)])

    @classmethod
    def path_ERCRe(cls, ta=None, **kwargs):
        #M 97.0919,113.444 C 101.584,110.85 108.71057,109.94132 108.473,113.444 108.3774,114.8535 107.31981,114.99693 106.41026,114.81971 105.04582,114.55386 104.65889,113.44007 105.32177,113.01325 105.81749,112.69406 107.6565,112.67783 108.34337,112.67783

        #z0 = P(0, -0)
        #c0 = P(1.58471, 0.915106)
        #c1 = P(4.09881, 1.23567)
        #z1 = P(4.015, -0)
        #c2 = P(3.98127, -0.49724)
        #c3 = P(3.60818, -0.547839)
        #z2 = P(3.28731, -0.48532)
        #c4 = P(2.80597, -0.391534)
        #c5 = P(2.66947, 0.00138642)
        #z3 = P(2.90332, 0.151959)
        #c6 = P(3.07819, 0.264562)
        #c7 = P(3.72696, 0.270288)
        z4 = P(3.96927, 0.270288)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58471, 0.915106)
        #z1 = z0 + P(4.015, 0)
        #c1 = z1 + P(0.0838094, 1.23567)
        #c2 = z1 + P(-0.0337256, -0.49724)
        #z2 = z1 + P(-0.727689, -0.48532)
        #c3 = z2 + P(0.320869, -0.0625193)
        #c4 = z2 + P(-0.481344, 0.093786)
        #z3 = z2 + P(-0.383995, 0.637279)
        #c5 = z3 + P(-0.233849, -0.150573)
        #c6 = z3 + P(0.174879, 0.112603)
        #z4 = z3 + P(1.06595, 0.118329)
        #c7 = z4 + P(-0.242312, 0)

        z0 = P(0, -0)
        c0 = z0 + PP(1.82995, 30)
        z1 = z0 + PP(4.015, 0)
        c1 = z1 + PP(1.23851, 86)
        c2 = z1 + PP(0.498383, -93)
        z2 = z1 + PP(0.874681, -146)
        c3 = z2 + PP(0.326903, -11)
        c4 = z2 + PP(0.490396, 168)
        #z3 = z2 + PP(0.744027, 121)
        z3 = z4 - PP(1.0725, ta + 6)
        c5 = z3 + PP(0.278132, -147)
        #c6 = z3 + PP(0.207996, 32)
        #z4 = z3 + PP(1.0725, 6)
        #c7 = z4 + PP(0.242312, 180)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ERCRer(cls, ta=None, **kwargs):
        #M 158.181,113.444 C 162.673,110.85 169.562,109.926 169.562,113.444 169.562,115.141 168.10453,115.78742 167.10082,115.451 166.6292,115.29292 166.44666,114.63668 166.7463,114.00151 167.10894,113.23281 167.8137,112.36433 168.74436,111.81782

        #z0 = P(0, -0)
        #c0 = P(1.58468, 0.915106)
        #c1 = P(4.01496, 1.24107)
        #z1 = P(4.01496, -0)
        #c2 = P(4.01496, -0.598664)
        #c3 = P(3.5008, -0.826706)
        #z2 = P(3.14671, -0.708025)
        #c4 = P(2.98034, -0.652258)
        #c5 = P(2.91594, -0.420751)
        #z3 = P(3.02165, -0.196677)
        #c6 = P(3.14958, 0.0745031)
        #c7 = P(3.3982, 0.380884)
        z4 = P(3.72652, 0.57368)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58468, 0.915106)
        #z1 = z0 + P(4.01496, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.86825, -0.708025)
        #c3 = z2 + P(0.354087, -0.118682)
        #c4 = z2 + P(-0.166377, 0.0557671)
        #z3 = z2 + P(-0.125067, 0.511348)
        #c5 = z3 + P(-0.105706, -0.224074)
        #c6 = z3 + P(0.127931, 0.27118)
        #z4 = z3 + P(0.704871, 0.770357)
        #c7 = z4 + P(-0.328316, -0.192797)

        z0 = P(0, -0)
        c0 = z0 + PP(1.82992, 30)
        z1 = z0 + PP(4.01496, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        z2 = z1 + PP(1.12034, -140)
        c3 = z2 + PP(0.373447, -18)
        c4 = z2 + PP(0.175474, 161)
        #z3 = z2 + PP(0.52642, 103)
        z3 = z4 - PP(1.04417, ta + 376)
        c5 = z3 + PP(0.247756, -115)
        #c6 = z3 + PP(0.299842, 64)
        #z4 = z3 + PP(1.04417, 47)
        #c7 = z4 + PP(0.380739, -149)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ERCRel(cls, ta=None, **kwargs):
        #M 47.3414,113.444 C 51.8338,110.85 58.7225,109.926 58.7225,113.444 58.7225,115.141 56.615572,114.49888 56.066656,114.03293 55.545374,113.59043 54.915678,113.01143 55.062041,112.26972 55.218504,111.47683 57.484914,111.85361 58.438749,112.36102

        #z0 = P(0, -0)
        #c0 = P(1.58482, 0.915106)
        #c1 = P(4.015, 1.24107)
        #z1 = P(4.015, -0)
        #c2 = P(4.015, -0.598664)
        #c3 = P(3.27172, -0.372138)
        #z2 = P(3.07808, -0.207761)
        #c4 = P(2.89418, -0.0516572)
        #c5 = P(2.67204, 0.152601)
        #z3 = P(2.72367, 0.41426)
        #c6 = P(2.77887, 0.693974)
        #c7 = P(3.57841, 0.561054)
        z4 = P(3.9149, 0.382051)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58482, 0.915106)
        #z1 = z0 + P(4.015, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.936923, -0.207761)
        #c3 = z2 + P(0.193645, -0.164377)
        #c4 = z2 + P(-0.183897, 0.156104)
        #z3 = z2 + P(-0.354406, 0.622021)
        #c5 = z3 + P(-0.0516336, -0.261659)
        #c6 = z3 + P(0.0551967, 0.279714)
        #z4 = z3 + P(1.19123, -0.0322086)
        #c7 = z4 + P(-0.336492, 0.179003)

        z0 = P(0, -0)
        c0 = z0 + PP(1.83005, 30)
        z1 = z0 + PP(4.015, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        z2 = z1 + PP(0.959682, -167)
        c3 = z2 + PP(0.254004, -40)
        c4 = z2 + PP(0.241219, 139)
        #z3 = z2 + PP(0.715901, 119)
        z3 = z4 - PP(1.19166, ta + 28)
        c5 = z3 + PP(0.266705, -101)
        #c6 = z3 + PP(0.285108, 78)
        #z4 = z3 + PP(1.19166, -1)
        #c7 = z4 + PP(0.381141, 151)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ERCRne(cls, ta=None, **kwargs):
        #M 370.136,113.444 C 374.629,110.85 381.517,109.926 381.517,113.444 381.517,115.141 378.79668,115.62812 378.257,114.91742 377.45816,113.86545 379.12368,112.27684 380.199,111.517

        #z0 = P(0, -0)
        #c0 = P(1.58503, 0.915106)
        #c1 = P(4.01496, 1.24107)
        #z1 = P(4.01496, -0)
        #c2 = P(4.01496, -0.598664)
        #c3 = P(3.0553, -0.770509)
        #z2 = P(2.86491, -0.51979)
        #c4 = P(2.5831, -0.148678)
        #c5 = P(3.17065, 0.411748)
        z3 = P(3.55, 0.679803)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58503, 0.915106)
        #z1 = z0 + P(4.01496, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-1.15006, -0.51979)
        #c3 = z2 + P(0.190387, -0.250719)
        #c4 = z2 + P(-0.281813, 0.371112)
        #z3 = z2 + P(0.685094, 1.19959)
        #c5 = z3 + P(-0.379349, -0.268055)

        z0 = P(0, -0)
        c0 = z0 + PP(1.83023, 29)
        z1 = z0 + PP(4.01496, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        #z2 = z1 + PP(1.26207, -155)
        z2 = z3 - PP(1.38144, ta + 384)
        c3 = z2 + PP(0.314813, -52)
        #c4 = z2 + PP(0.465985, 127)
        #z3 = z2 + PP(1.38144, 60)
        #c5 = z3 + PP(0.464499, -144)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            #controlcurve(c4, c5),
            curve(),
            endknot(*z3, angle=ta)])

    @classmethod
    def path_ERCRner(cls, ta=None, **kwargs):
        #M 417.836,113.444 C 422.329,110.85 429.217,109.926 429.217,113.444 429.217,115.141 428.28519,116.01125 427.55772,115.52214 426.33618,114.70086 427.07998,112.53529 427.59716,111.41639

        #z0 = P(0, -0)
        #c0 = P(1.58503, 0.915106)
        #c1 = P(4.01496, 1.24107)
        #z1 = P(4.01496, -0)
        #c2 = P(4.01496, -0.598664)
        #c3 = P(3.68624, -0.905669)
        #z2 = P(3.42961, -0.733122)
        #c4 = P(2.99867, -0.443392)
        #c5 = P(3.26107, 0.320573)
        z3 = P(3.44352, 0.715296)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58503, 0.915106)
        #z1 = z0 + P(4.01496, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.585357, -0.733122)
        #c3 = z2 + P(0.256635, -0.172547)
        #c4 = z2 + P(-0.430932, 0.289729)
        #z3 = z2 + P(0.0139136, 1.44842)
        #c5 = z3 + P(-0.18245, -0.394723)

        z0 = P(0, -0)
        c0 = z0 + PP(1.83023, 29)
        z1 = z0 + PP(4.01496, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        #z2 = z1 + PP(0.938142, -128)
        z2 = z3 - PP(1.44848, ta + 383)
        c3 = z2 + PP(0.309248, -33)
        #c4 = z2 + PP(0.519274, 146)
        #z3 = z2 + PP(1.44848, 89)
        #c5 = z3 + PP(0.43485, -114)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            #controlcurve(c4, c5),
            curve(),
            endknot(*z3, angle=ta)])

    @classmethod
    def path_ERCRnel(cls, ta=None, **kwargs):
        #M 323.167,113.444 C 327.659,110.85 334.85614,109.93952 334.548,113.444 334.44382,114.6289 333.47314,114.67295 332.58491,114.28336 331.69668,113.89377 330.80019,112.96814 330.96304,112.41417 331.18777,111.64972 332.29058,111.71548 333.23,111.517

        #z0 = P(0, -0)
        #c0 = P(1.58468, 0.915106)
        #c1 = P(4.12367, 1.2363)
        #z1 = P(4.01496, -0)
        #c2 = P(3.97821, -0.418006)
        #c3 = P(3.63578, -0.433546)
        #z2 = P(3.32243, -0.296108)
        #c4 = P(3.00908, -0.158669)
        #c5 = P(2.69282, 0.167873)
        #z3 = P(2.75027, 0.363301)
        #c6 = P(2.82955, 0.632982)
        #c7 = P(3.2186, 0.609783)
        z4 = P(3.55, 0.679803)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58468, 0.915106)
        #z1 = z0 + P(4.01496, 0)
        #c1 = z1 + P(0.108705, 1.2363)
        #c2 = z1 + P(-0.0367524, -0.418006)
        #z2 = z1 + P(-0.692535, -0.296108)
        #c3 = z2 + P(0.313348, -0.137439)
        #c4 = z2 + P(-0.313348, 0.137439)
        #z3 = z2 + P(-0.57216, 0.659409)
        #c5 = z3 + P(-0.0574499, -0.195428)
        #c6 = z3 + P(0.0792798, 0.269681)
        #z4 = z3 + P(0.799733, 0.316502)
        #c7 = z4 + P(-0.331407, -0.0700193)

        z0 = P(0, -0)
        c0 = z0 + PP(1.82992, 30)
        z1 = z0 + PP(4.01496, 0)
        c1 = z1 + PP(1.24107, 84)
        c2 = z1 + PP(0.419619, -95)
        z2 = z1 + PP(0.753182, -156)
        c3 = z2 + PP(0.342164, -23)
        c4 = z2 + PP(0.342164, 156)
        #z3 = z2 + PP(0.873033, 130)
        z3 = z4 - PP(0.860085, ta + 369)
        c5 = z3 + PP(0.203698, -106)
        #c6 = z3 + PP(0.281093, 73)
        #z4 = z3 + PP(0.860085, 21)
        #c7 = z4 + PP(0.338723, -168)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ERCRs(cls, ta=None, **kwargs):
        return cls.path_ERCRsr()

    @classmethod
    def path_ERCRsl(cls, ta=None, **kwargs):
        #M284.755 113.444C289.248 110.85 296.136 109.926 296.136 113.444C296.136 115.141 294.36 116.02 293.374 115.451C292.82 115.118 293.337 114.112 293.61 113.527C293.936 112.859 294.432 112.214 294.818 111.517

        #z0 = P(0, -0)
        #c0 = P(1.58503, 0.915106)
        #c1 = P(4.01496, 1.24107)
        #z1 = P(4.01496, -0)
        #c2 = P(4.01496, -0.598664)
        #c3 = P(3.38843, -0.908756)
        #z2 = P(3.04059, -0.708025)
        #c4 = P(2.84515, -0.59055)
        #c5 = P(3.02754, -0.235656)
        #z3 = P(3.12385, -0.0292806)
        #c6 = P(3.23885, 0.206375)
        #c7 = P(3.41383, 0.433917)
        #z4 = P(3.55, 0.679803)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58503, 0.915106)
        #z1 = z0 + P(4.01496, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.974372, -0.708025)
        #c3 = z2 + P(0.347839, -0.200731)
        #c4 = z2 + P(-0.195439, 0.117475)
        #z3 = z2 + P(0.0832556, 0.678744)
        #c5 = z3 + P(-0.0963083, -0.206375)
        #c6 = z3 + P(0.115006, 0.235656)
        #z4 = z3 + P(0.426156, 0.709083)
        #c7 = z4 + P(-0.136172, -0.245886)

        z0 = P(0, -0)
        c0 = z0 + PP(1.83023, 29)
        z1 = z0 + PP(4.01496, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        z2 = z1 + PP(1.20445, -143)
        c3 = z2 + PP(0.401603, -29)
        c4 = z2 + PP(0.228028, 148)
        z3 = z2 + PP(0.683831, 83)
        #z3 = z4 - PP(0.827289, ta + 356)
        c5 = z3 + PP(0.227741, -115)
        c6 = z3 + PP(0.262221, 63)
        z4 = z3 + PP(0.827289, 58)
        c7 = z4 + PP(0.281074, -118)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            controlcurve(c6, c7),
            #curve(),
            endknot(*z4)])

    @classmethod
    def path_ERCRsr(cls, ta=None, **kwargs):
        #M 207.931,113.444 C 212.424,110.85 219.312,109.926 219.312,113.444 219.312,115.141 217.51031,113.82954 217.1012,113.44775 216.62056,112.99922 215.61689,111.86545 214.87174,111.18254

        #z0 = P(0, -0)
        #c0 = P(1.58503, 0.915106)
        #c1 = P(4.01496, 1.24107)
        #z1 = P(4.01496, -0)
        #c2 = P(4.01496, -0.598664)
        #c3 = P(3.37937, -0.13601)
        #z2 = P(3.23504, -0.00132292)
        #c4 = P(3.06548, 0.156909)
        #c5 = P(2.71141, 0.556877)
        #z3 = P(2.44854, 0.797793)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58503, 0.915106)
        #z1 = z0 + P(4.01496, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.779921, -0.00132292)
        #c3 = z2 + P(0.144325, -0.134687)
        #c4 = z2 + P(-0.169559, 0.158231)
        #z3 = z2 + P(-0.786504, 0.799116)
        #c5 = z3 + P(0.262872, -0.240915)

        z0 = P(0, -0)
        c0 = z0 + PP(1.83023, 29)
        z1 = z0 + PP(4.01496, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        z2 = z1 + PP(0.779922, -179)
        #z2 = z3 - PP(1.12124, ta + 356)
        c3 = z2 + PP(0.197409, -43)
        c4 = z2 + PP(0.231921, 136)
        z3 = z2 + PP(1.12124, 134)
        c5 = z3 + PP(0.35657, -42)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            #curve(),
            endknot(*z3)])

    @classmethod
    def path_ERCRse(cls, ta=None, **kwargs):
        #M 160.137,185.582 C 164.629,182.988 171.518,182.064 171.518,185.582 171.518,187.279 169.62642,187.7352 168.756,187.13646 168.05853,186.65669 168.31952,184.87595 169.12776,184.62416 170.07462,184.32919 170.6173,185.86328 171.15778,186.79926

        #z0 = P(0, -0)
        #c0 = P(1.58468, 0.915106)
        #c1 = P(4.01496, 1.24107)
        #z1 = P(4.01496, -0)
        #c2 = P(4.01496, -0.598664)
        #c3 = P(3.34766, -0.759601)
        #z2 = P(3.04059, -0.548379)
        #c4 = P(2.79454, -0.379127)
        #c5 = P(2.88661, 0.249079)
        #z3 = P(3.17174, 0.337905)
        #c6 = P(3.50577, 0.441964)
        #c7 = P(3.69722, -0.0992293)
        z4 = P(3.88789, -0.429422)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58468, 0.915106)
        #z1 = z0 + P(4.01496, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.974372, -0.548379)
        #c3 = z2 + P(0.307065, -0.211222)
        #c4 = z2 + P(-0.246052, 0.169252)
        #z3 = z2 + P(0.131149, 0.886284)
        #c5 = z3 + P(-0.285129, -0.0888259)
        #c6 = z3 + P(0.334031, 0.104059)
        #z4 = z3 + P(0.716146, -0.767327)
        #c7 = z4 + P(-0.190669, 0.330193)

        z0 = P(0, -0)
        c0 = z0 + PP(1.82992, 30)
        z1 = z0 + PP(4.01496, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        z2 = z1 + PP(1.11809, -150)
        c3 = z2 + PP(0.372698, -34)
        c4 = z2 + PP(0.298643, 145)
        #z3 = z2 + PP(0.895934, 81)
        z3 = z4 - PP(1.0496, ta + 14)
        c5 = z3 + PP(0.298645, -162)
        #c6 = z3 + PP(0.349864, 17)
        #z4 = z3 + PP(1.0496, -46)
        #c7 = z4 + PP(0.38129, 120)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ERCRser(cls, ta=None, **kwargs):
        #M 110.386,185.582 C 114.879,182.988 121.768,182.064 121.768,185.582 121.768,187.279 120.41843,187.81748 119.44416,187.5402 118.63059,187.30866 118.05459,185.72362 118.65545,185.12825 119.41533,184.37531 120.88832,185.58209 121.69642,186.15361

        #z0 = P(0, -0)
        #c0 = P(1.58503, 0.915106)
        #c1 = P(4.01532, 1.24107)
        #z1 = P(4.01532, -0)
        #c2 = P(4.01532, -0.598664)
        #c3 = P(3.53922, -0.788628)
        #z2 = P(3.19552, -0.690809)
        #c4 = P(2.90851, -0.609127)
        #c5 = P(2.70531, -0.0499604)
        #z3 = P(2.91728, 0.160073)
        #c6 = P(3.18535, 0.425693)
        #c7 = P(3.70499, -3.175e-05)
        z4 = P(3.99006, -0.201651)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58503, 0.915106)
        #z1 = z0 + P(4.01532, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.819799, -0.690809)
        #c3 = z2 + P(0.343701, -0.0978182)
        #c4 = z2 + P(-0.287009, 0.0816822)
        #z3 = z2 + P(-0.278239, 0.850882)
        #c5 = z3 + P(-0.21197, -0.210033)
        #c6 = z3 + P(0.268069, 0.26562)
        #z4 = z3 + P(1.07279, -0.361724)
        #c7 = z4 + P(-0.28508, 0.20162)

        z0 = P(0, -0)
        c0 = z0 + PP(1.83023, 29)
        z1 = z0 + PP(4.01532, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        z2 = z1 + PP(1.07205, -139)
        c3 = z2 + PP(0.357349, -15)
        c4 = z2 + PP(0.298406, 164)
        #z3 = z2 + PP(0.895219, 108)
        z3 = z4 - PP(1.13213, ta + 18)
        c5 = z3 + PP(0.298405, -135)
        #c6 = z3 + PP(0.377379, 44)
        #z4 = z3 + PP(1.13213, -18)
        #c7 = z4 + PP(0.349172, 144)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            knot(*z3),
            #controlcurve(c6, c7),
            curve(),
            endknot(*z4, angle=ta)])

    @classmethod
    def path_ERCRsel(cls, ta=None, **kwargs):
        return cls.path_ERCRs()

    @classmethod
    def path_ERCRsw(cls, ta=None, **kwargs):
        #M 47.3414,185.582 C 51.8338,182.988 58.7225,182.064 58.7225,185.582 58.7225,187.279 57.796395,188.43376 56.741031,187.68659 56.011265,187.16994 56.981163,184.7609 57.404,183.656

        #z0 = P(0, -0)
        #c0 = P(1.58482, 0.915106)
        #c1 = P(4.015, 1.24107)
        #z1 = P(4.015, -0)
        #c2 = P(4.015, -0.598664)
        #c3 = P(3.68829, -1.00604)
        #z2 = P(3.31598, -0.742453)
        #c4 = P(3.05854, -0.56019)
        #c5 = P(3.40069, 0.289666)
        #z3 = P(3.54986, 0.67945)

        #z0 = P(0, -0)
        #c0 = z0 + P(1.58482, 0.915106)
        #z1 = z0 + P(4.015, 0)
        #c1 = z1 + P(0, 1.24107)
        #c2 = z1 + P(0, -0.598664)
        #z2 = z1 + P(-0.699018, -0.742453)
        #c3 = z2 + P(0.372309, -0.263585)
        #c4 = z2 + P(-0.257445, 0.182263)
        #z3 = z2 + P(0.233881, 1.4219)
        #c5 = z3 + P(-0.149167, -0.389784)

        z0 = P(0, -0)
        c0 = z0 + PP(1.83005, 30)
        z1 = z0 + PP(4.015, 0)
        c1 = z1 + PP(1.24107, 90)
        c2 = z1 + PP(0.598664, -90)
        z2 = z1 + PP(1.01974, -133)
        #z2 = z3 - PP(1.44101, ta + 370)
        c3 = z2 + PP(0.45617, -35)
        c4 = z2 + PP(0.315433, 144)
        z3 = z2 + PP(1.44101, 80)
        c5 = z3 + PP(0.417352, -110)

        return pyx.metapost.path.path([
            beginknot(*z0),
            controlcurve(c0, c1),
            knot(*z1),
            controlcurve(c2, c3),
            knot(*z2),
            controlcurve(c4, c5),
            #curve(),
            endknot(*z3)])

    @classmethod
    def path_ERCRswr(cls, ta=None, **kwargs):
        return cls.path_ERCRs()

    @classmethod
    def path_ERCRswl(cls, ta=None, **kwargs):
        return cls.path_ERCR()

class CharIin(CharIi):
    def __init__(self, name='iin', kana='いいん',
                 model='ER4CR1NE1F', head_type='ER',
                 tail_type='NEF'):
        super().__init__(name, kana, model, head_type, tail_type)

    def get_paths(self):
        return [self.path_ERCRNE()]
